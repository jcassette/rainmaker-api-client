# coding: utf-8

"""
    API Definitions for RainMaker Backend Service

    This Swagger file provides the details about the RainMaker platform APIs.<br><br> There are two types of APIs supported by RainMaker - Unauthenticated and Authenticated.<br> The authenticated APIs are marked in the Swagger file, with a “lock” sign in front of them.<br> For the Unauthenticated APIs, there is no need to provide any authentication tokens in the HTTP header.<br> When the user logs in successfully, he receives access_token in the response. For the Authenticated APIs, this access_token needs to be passed in the \"Authorization\" HTTP header as the authentication token.<br> <br> <b>Note:</b><br><ul><li>RainMaker APIs do not support using double slashes after the resources or methods. Including a double slash goes against HTTP best practices. <br><li>The RainMaker APIs do not support following HTTP headers - data, verify and cookies.</ul>  # noqa: E501

    OpenAPI spec version: 1.1.17-fd1c887_2022-05-24T06:46
    Contact: esp-rainmaker-admin@espressif.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import rainmaker_api_client
from rainmaker_api_client.api.ota_service_api import OTAServiceApi  # noqa: E501
from rainmaker_api_client.rest import ApiException


class TestOTAServiceApi(unittest.TestCase):
    """OTAServiceApi unit test stubs"""

    def setUp(self):
        self.api = OTAServiceApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_adminuploadotaimage(self):
        """Test case for adminuploadotaimage

        This API is used for uploading a new Firmware image  # noqa: E501
        """
        pass

    def test_archive_or_unarchive_ota_image(self):
        """Test case for archive_or_unarchive_ota_image

        Archive/Unarchive an OTA image  # noqa: E501
        """
        pass

    def test_cancel_or_archive_ota_job(self):
        """Test case for cancel_or_archive_ota_job

        Cancel/Archive an OTA job  # noqa: E501
        """
        pass

    def test_createotajob(self):
        """Test case for createotajob

        This API creates a new OTA job  # noqa: E501
        """
        pass

    def test_delete_ota_image(self):
        """Test case for delete_ota_image

        Delete the  OTA Image for the user  # noqa: E501
        """
        pass

    def test_get_ota_image(self):
        """Test case for get_ota_image

        Get the details about OTA images for the user  # noqa: E501
        """
        pass

    def test_get_ota_job(self):
        """Test case for get_ota_job

        Get the details about OTA jobs for the user  # noqa: E501
        """
        pass

    def test_get_ota_job_status(self):
        """Test case for get_ota_job_status

        This API provides status of the the OTA job  # noqa: E501
        """
        pass

    def test_get_ota_job_status_summary(self):
        """Test case for get_ota_job_status_summary

        This API provides summary of the the OTA job  # noqa: E501
        """
        pass

    def test_getnodeotastatus(self):
        """Test case for getnodeotastatus

        Get latest status of OTA update for the node associated with the user  # noqa: E501
        """
        pass

    def test_getotaupdate(self):
        """Test case for getotaupdate

        Get latest OTA update for the node associated with the user  # noqa: E501
        """
        pass

    def test_o_ta_image_upload_confirm_url(self):
        """Test case for o_ta_image_upload_confirm_url

        This API is used to confirm the upload Firmware image.  # noqa: E501
        """
        pass

    def test_o_ta_image_upload_request_url(self):
        """Test case for o_ta_image_upload_request_url

        Get pre-signed url to upload the firmware image to S3  # noqa: E501
        """
        pass

    def test_postotaupdate(self):
        """Test case for postotaupdate

        Push OTA update to the node  # noqa: E501
        """
        pass

    def test_useruploadotaimage(self):
        """Test case for useruploadotaimage

        API for the end user to upload a new firmware image  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
